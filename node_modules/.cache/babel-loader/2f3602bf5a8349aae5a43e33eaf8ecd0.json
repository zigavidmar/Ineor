{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SatoshiFlipper\\\\Desktop\\\\ineor-assignment\\\\src\\\\components\\\\TimePick.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { setMinutes, setHours } from 'date-fns';\nimport moment from 'moment';\nexport class TimePick extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.calculateTime = () => {\n      const startingHours = this.props.startHour;\n      const endingHours = this.props.endHour;\n      var d = new Date();\n      var n = d.getDay();\n\n      if (n == 1) {\n        return console.log(startingHours[1]);\n      } else {\n        return 0;\n      }\n    };\n\n    this.state = {\n      startDate: null\n    };\n  }\n\n  render() {\n    const {\n      startDate\n    } = this.state;\n    const now = moment().toDate();\n    /* const startingHours = () => {\r\n      const day = getDay();\r\n      return day !== 0 && day !== 6;\r\n    }; */\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: startDate,\n      onChange: this.handleChange,\n      showTimeSelect: true,\n      showTimeSelectOnly: true,\n      minTime: setHours(setMinutes(now, 0), this.calculateTime),\n      maxTime: setHours(setMinutes(now, 45), 23),\n      timeIntervals: this.props.serviceDuration,\n      disabled: this.props.disabled,\n      timeCaption: \"Time\",\n      dateFormat: \"h:mm aa\",\n      placeholderText: \"Select Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\nexport default TimePick;","map":{"version":3,"sources":["C:/Users/SatoshiFlipper/Desktop/ineor-assignment/src/components/TimePick.js"],"names":["React","Component","DatePicker","setMinutes","setHours","moment","TimePick","constructor","props","handleChange","date","setState","startDate","calculateTime","startingHours","startHour","endingHours","endHour","d","Date","n","getDay","console","log","state","render","now","toDate","serviceDuration","disabled"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,UAArC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAEtCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,YAPmB,GAOJC,IAAI,IAAI;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEF;AADC,OAAd;AAGD,KAXkB;;AAAA,SAanBG,aAbmB,GAaH,MAAM;AACpB,YAAMC,aAAa,GAAG,KAAKN,KAAL,CAAWO,SAAjC;AACA,YAAMC,WAAW,GAAG,KAAKR,KAAL,CAAWS,OAA/B;AACA,UAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,UAAIC,CAAC,GAAGF,CAAC,CAACG,MAAF,EAAR;;AACA,UAAID,CAAC,IAAI,CAAT,EAAY;AACV,eAAQE,OAAO,CAACC,GAAR,CAAYT,aAAa,CAAC,CAAD,CAAzB,CAAR;AACD,OAFD,MAEO;AACL,eAAO,CAAP;AACD;AACF,KAvBkB;;AAEjB,SAAKU,KAAL,GAAa;AACXZ,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAoBDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAgB,KAAKY,KAA3B;AACA,UAAME,GAAG,GAAGrB,MAAM,GAAGsB,MAAT,EAAZ;AACA;;;;;AAIA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,UAAD;AACC,MAAA,QAAQ,EAAEf,SADX;AAEC,MAAA,QAAQ,EAAE,KAAKH,YAFhB;AAGC,MAAA,cAAc,MAHf;AAIC,MAAA,kBAAkB,MAJnB;AAKE,MAAA,OAAO,EAAEL,QAAQ,CAACD,UAAU,CAACuB,GAAD,EAAM,CAAN,CAAX,EAAqB,KAAKb,aAA1B,CALnB;AAMC,MAAA,OAAO,EAAET,QAAQ,CAACD,UAAU,CAACuB,GAAD,EAAM,EAAN,CAAX,EAAsB,EAAtB,CANlB;AAOC,MAAA,aAAa,EAAE,KAAKlB,KAAL,CAAWoB,eAP3B;AAQC,MAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWqB,QARtB;AASC,MAAA,WAAW,EAAC,MATb;AAUC,MAAA,UAAU,EAAC,SAVZ;AAWC,MAAA,eAAe,EAAC,aAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADF;AAiBD;;AAnDqC;AAsDxC,eAAevB,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { setMinutes, setHours } from 'date-fns';\r\nimport moment from 'moment'\r\n\r\nexport class TimePick extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      startDate: null\r\n    }\r\n  }\r\n\r\n  handleChange = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n\r\n  calculateTime = () => {\r\n    const startingHours = this.props.startHour;\r\n    const endingHours = this.props.endHour;\r\n    var d = new Date();\r\n    var n = d.getDay();\r\n    if (n == 1) {\r\n      return  console.log(startingHours[1]);\r\n    } else {\r\n      return 0;\r\n    }\r\n  } \r\n\r\n  render() {\r\n    const { startDate } = this.state;\r\n    const now = moment().toDate();\r\n    /* const startingHours = () => {\r\n      const day = getDay();\r\n      return day !== 0 && day !== 6;\r\n    }; */\r\n    return (\r\n      <div>\r\n         <DatePicker \r\n          selected={startDate}\r\n          onChange={this.handleChange}\r\n          showTimeSelect\r\n          showTimeSelectOnly\r\n           minTime={setHours(setMinutes(now, 0), this.calculateTime)}\r\n          maxTime={setHours(setMinutes(now, 45), 23)}\r\n          timeIntervals={this.props.serviceDuration}\r\n          disabled={this.props.disabled}\r\n          timeCaption=\"Time\"\r\n          dateFormat=\"h:mm aa\"\r\n          placeholderText=\"Select Time\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimePick\r\n"]},"metadata":{},"sourceType":"module"}