{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SatoshiFlipper\\\\Desktop\\\\ineor-assignment\\\\src\\\\components\\\\TimePicker.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { setMinutes, setHours, addMonths } from 'date-fns';\nimport moment from 'moment';\nimport '../sass/bookappointment.scss';\nexport class TimePicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = value => {\n      this.setState({\n        startDate: value,\n        timeDisabled: false,\n        time: null\n      });\n\n      if (value.getDay() === 1) {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[0].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[0].endHour)\n        });\n      } else if (value.getDay() === 2) {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[1].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[1].endHour)\n        });\n      } else if (value.getDay() === 3) {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[2].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[2].endHour)\n        });\n      } else if (value.getDay() === 4) {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[3].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[3].endHour)\n        });\n      } else {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[4].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[4].endHour)\n        });\n      }\n\n      let fields = this.state.fields;\n      fields['date'] = e.target.value;\n      this.setState({\n        fields\n      });\n    };\n\n    this.handleTime = value => {\n      this.setState({\n        time: value\n      });\n    };\n\n    this.state = {\n      startDate: null,\n      startHour: null,\n      endHour: null,\n      timeDisabled: this.props.timeDisabled,\n      time: null,\n      fields: this.props.fields\n    };\n  }\n\n  render() {\n    const {\n      startDate,\n      startHour,\n      endHour,\n      fields\n    } = this.state;\n    const now = moment().toDate();\n\n    const isWeekday = date => {\n      const day = date.getDay();\n      return day !== 0 && day !== 6;\n    };\n\n    const checkIfBooked = time => {};\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: startDate,\n      onChange: this.handleChange.bind(this, \"date\"),\n      filterDate: isWeekday,\n      minDate: new Date(),\n      maxDate: addMonths(new Date(), 5),\n      disabled: this.props.datedisabled,\n      placeholderText: \"Select Date\",\n      value: fields[\"date\"] || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.time,\n      onChange: this.handleTime.bind(this, \"time\"),\n      showTimeSelect: true,\n      showTimeSelectOnly: true,\n      minTime: setHours(setMinutes(now, 0), startHour),\n      maxTime: setHours(setMinutes(now, 30), endHour - 1),\n      filterTime: checkIfBooked,\n      timeIntervals: this.props.serviceDuration,\n      disabled: this.state.timeDisabled,\n      timeCaption: \"Time\",\n      dateFormat: \"h:mm aa\",\n      placeholderText: \"Select Time\",\n      value: fields[\"time\"] || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nexport default TimePicker;","map":{"version":3,"sources":["C:/Users/SatoshiFlipper/Desktop/ineor-assignment/src/components/TimePicker.js"],"names":["React","Component","DatePicker","setMinutes","setHours","addMonths","moment","TimePicker","constructor","props","handleChange","value","setState","startDate","timeDisabled","time","getDay","startHour","getWorkingHours","map","day","endHour","fields","state","e","target","handleTime","render","now","toDate","isWeekday","date","checkIfBooked","bind","Date","datedisabled","serviceDuration"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { setMinutes, setHours, addMonths } from 'date-fns';\r\nimport moment from 'moment'\r\nimport '../sass/bookappointment.scss';\r\n\r\n\r\nexport class TimePicker extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      startDate: null,\r\n      startHour: null,\r\n      endHour: null,\r\n      timeDisabled: this.props.timeDisabled,\r\n      time: null,\r\n      fields: this.props.fields,\r\n    }\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    this.setState({\r\n      startDate: value,\r\n      timeDisabled: false,\r\n      time: null,\r\n    });\r\n    if (value.getDay() === 1) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[0].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[0].endHour)\r\n      });\r\n    } else if (value.getDay() === 2) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[1].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[1].endHour)\r\n      });\r\n    } else if (value.getDay() === 3) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[2].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[2].endHour)\r\n      });\r\n    } else if (value.getDay() === 4) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[3].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[3].endHour)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[4].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[4].endHour)\r\n      });\r\n    }\r\n\r\n    let fields = this.state.fields;\r\n    fields['date'] = e.target.value;        \r\n    this.setState({fields});\r\n\r\n  };\r\n\r\n  handleTime = (value) => {\r\n    this.setState({\r\n      time: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { startDate, startHour, endHour, fields } = this.state;\r\n    const now = moment().toDate();\r\n    const isWeekday = date => {\r\n      const day = date.getDay();\r\n      return day !== 0 && day !== 6;\r\n    };\r\n    const checkIfBooked = time => {\r\n\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"input-wrapper\">\r\n          <DatePicker\r\n              selected={startDate}\r\n              onChange={this.handleChange.bind(this, \"date\")}\r\n              filterDate={isWeekday}\r\n              minDate={new Date()}\r\n              maxDate={addMonths(new Date(), 5)}\r\n              disabled={this.props.datedisabled}\r\n              placeholderText=\"Select Date\"\r\n              value={fields[\"date\"] || ''}\r\n          />\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <DatePicker \r\n            selected={this.state.time}\r\n            onChange={this.handleTime.bind(this, \"time\")}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            minTime={setHours(setMinutes(now, 0), startHour)}\r\n            maxTime={setHours(setMinutes(now, 30), endHour - 1)}\r\n            filterTime={checkIfBooked}\r\n            timeIntervals={this.props.serviceDuration}\r\n            disabled={this.state.timeDisabled}\r\n            timeCaption=\"Time\"\r\n            dateFormat=\"h:mm aa\"\r\n            placeholderText=\"Select Time\"\r\n            value={fields[\"time\"] || ''}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimePicker\r\n"]},"metadata":{},"sourceType":"module"}