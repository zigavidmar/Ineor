{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SatoshiFlipper\\\\Desktop\\\\ineor-assignment\\\\src\\\\components\\\\TimePicker.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { setMinutes, setHours, addMonths } from 'date-fns';\nimport moment from 'moment';\nexport class TimePicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = value => {\n      this.setState({\n        startDate: value\n      }, () => console.log(value.getDay()));\n      /* console.log(this.props.getWorkingHours.map(day => day[2].endHour))\r\n      console.log(this.props.getWorkingHours.map(day => day[2].startHour)) */\n\n      getDayOfAWeek = (startHour, endHour) => {\n        if (value.getDay() == 1) {\n          startHour = this.props.getWorkingHours.map(day => day[0].startHour);\n          endHour = this.props.getWorkingHours.map(day => day[0].endHour);\n        } else {\n          console.log('wrong');\n        }\n      };\n    };\n\n    this.state = {\n      startDate: null\n    };\n  }\n\n  render() {\n    const {\n      startDate\n    } = this.state;\n    const now = moment().toDate();\n\n    const isWeekday = date => {\n      const day = date.getDay();\n      return day !== 0 && day !== 6;\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: startDate,\n      onChange: this.handleChange,\n      filterDate: isWeekday,\n      minDate: new Date(),\n      maxDate: addMonths(new Date(), 5),\n      disabled: this.props.disabled,\n      placeholderText: \"Select Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: startDate,\n      onChange: this.handleChange,\n      showTimeSelect: true,\n      showTimeSelectOnly: true,\n      minTime: setHours(setMinutes(now, 0), 0),\n      maxTime: setHours(setMinutes(now, 45), 23),\n      timeIntervals: this.props.serviceDuration,\n      disabled: this.props.disabled,\n      timeCaption: \"Time\",\n      dateFormat: \"h:mm aa\",\n      placeholderText: \"Select Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nexport default TimePicker;","map":{"version":3,"sources":["C:/Users/SatoshiFlipper/Desktop/ineor-assignment/src/components/TimePicker.js"],"names":["React","Component","DatePicker","setMinutes","setHours","addMonths","moment","TimePicker","constructor","props","handleChange","value","setState","startDate","console","log","getDay","getDayOfAWeek","startHour","endHour","getWorkingHours","map","day","state","render","now","toDate","isWeekday","date","Date","disabled","serviceDuration"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { setMinutes, setHours, addMonths } from 'date-fns';\r\nimport moment from 'moment'\r\n\r\nexport class TimePicker extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      startDate: null,\r\n    }\r\n  }\r\n\r\n  handleChange = value => {\r\n    this.setState({\r\n      startDate: value\r\n    }, () => console.log(value.getDay()));\r\n    /* console.log(this.props.getWorkingHours.map(day => day[2].endHour))\r\n    console.log(this.props.getWorkingHours.map(day => day[2].startHour)) */\r\n    getDayOfAWeek = (startHour, endHour) => {\r\n      if (value.getDay() == 1) {\r\n        startHour = this.props.getWorkingHours.map(day => day[0].startHour);\r\n        endHour = this.props.getWorkingHours.map(day => day[0].endHour);\r\n      } else {\r\n        console.log('wrong')\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { startDate } = this.state;\r\n    const now = moment().toDate();\r\n    const isWeekday = date => {\r\n    const day = date.getDay();\r\n        return day !== 0 && day !== 6;\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"input-wrapper\">\r\n          <DatePicker\r\n              selected={startDate}\r\n              onChange={this.handleChange}\r\n              filterDate={isWeekday}\r\n              minDate={new Date()}\r\n              maxDate={addMonths(new Date(), 5)}\r\n              disabled={this.props.disabled}\r\n              placeholderText=\"Select Date\"\r\n          />\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <DatePicker \r\n            selected={startDate}\r\n            onChange={this.handleChange}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            minTime={setHours(setMinutes(now, 0), 0)}\r\n            maxTime={setHours(setMinutes(now, 45), 23)}\r\n            timeIntervals={this.props.serviceDuration}\r\n            disabled={this.props.disabled}\r\n            timeCaption=\"Time\"\r\n            dateFormat=\"h:mm aa\"\r\n            placeholderText=\"Select Time\"\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimePicker\r\n"]},"metadata":{},"sourceType":"module"}