{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Diga\\\\Desktop\\\\Ineor\\\\src\\\\components\\\\TimePicker.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { setMinutes, setHours, addMonths } from 'date-fns';\nimport moment from 'moment';\nimport { baseUrl } from './BookAppointment';\nimport '../sass/bookappointment.scss';\nexport class TimePicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (val, e) => {\n      this.setState({\n        startDate: val,\n        timeDisabled: false,\n        time: null,\n        excludedTimes: []\n      });\n      const getDay = val.getDay();\n\n      if (getDay === 1) {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[0].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[0].endHour)\n        });\n      } else if (getDay === 2) {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[1].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[1].endHour)\n        });\n      } else if (getDay === 3) {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[2].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[2].endHour)\n        });\n      } else if (getDay === 4) {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[3].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[3].endHour)\n        });\n      } else {\n        this.setState({\n          startHour: this.props.getWorkingHours.map(day => day[4].startHour),\n          endHour: this.props.getWorkingHours.map(day => day[4].endHour)\n        });\n      }\n\n      this.props.callbackGetDateValue(val);\n      var i;\n\n      for (i = 0; i < this.state.appointmentsDate.length; i++) {\n        if (`${val.toLocaleDateString()}` === this.state.appointmentsDate[i].toLocaleDateString()) {\n          const selectedDate = this.state.appointmentsDate[i];\n          const getHours = selectedDate.getHours();\n          const getMinutes = selectedDate.getMinutes();\n\n          if (this.props.serviceId === 3) {\n            var oldDateObj = setHours(setMinutes(new Date(), getMinutes), getHours);\n            var newDateObj = new Date();\n            newDateObj.setTime(oldDateObj.getTime() + 30 * 60 * 1000);\n            /* console.log(newDateObj); */\n\n            return this.setState({\n              excludedTimes: [newDateObj]\n            }, () => console.log(this.state.excludedTimes));\n          } else {\n            console.log('50');\n            return this.setState({\n              excludedTimes: [setHours(setMinutes(new Date(), getMinutes), getHours)]\n            }, () => console.log(this.state.excludedTimes));\n          }\n        }\n      }\n    };\n\n    this.handleTime = value => {\n      this.setState({\n        time: value\n      }\n      /* () => console.log(this.state.time) */\n      );\n      this.props.callbackGetTimeValue(value);\n    };\n\n    this.state = {\n      startDate: null,\n      startHour: null,\n      endHour: null,\n      timeDisabled: this.props.timeDisabled,\n      time: null,\n      appointments: null,\n      excludedTimes: []\n    };\n  }\n\n  componentDidMount() {\n    // GET APPOINTMENTS\n    fetch(baseUrl + '/appointments').then(getAppointments => {\n      return getAppointments.json();\n    }).then(getAppointments => {\n      const unix = getAppointments.map(appointment => appointment.startDate);\n      const newValue = unix.map(value => new Date(value * 1000));\n      this.setState({\n        appointmentsDate: newValue\n      }\n      /* () => console.log(newValue) */\n      );\n    }).catch(err => {\n      alert(\"Failed to load our appointments\" + err);\n    });\n  }\n\n  render() {\n    const {\n      startDate,\n      startHour,\n      endHour\n    } = this.state;\n    const now = moment().toDate();\n\n    const isWeekday = date => {\n      const day = date.getDay();\n      return day !== 0 && day !== 6;\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: startDate,\n      onChange: this.handleChange.bind(this),\n      filterDate: isWeekday,\n      minDate: new Date(),\n      maxDate: addMonths(new Date(), 5),\n      disabled: this.props.datedisabled,\n      placeholderText: \"Select Date\",\n      dateFormat: \"MMMM d, yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, this.props.errors['date'])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.time,\n      onChange: this.handleTime.bind(this),\n      showTimeSelect: true,\n      showTimeSelectOnly: true,\n      minTime: setHours(setMinutes(now, 0), startHour),\n      maxTime: setHours(setMinutes(now, 30), endHour - 1),\n      timeIntervals: this.props.serviceDuration,\n      disabled: this.state.timeDisabled,\n      timeCaption: \"Time\",\n      dateFormat: \"h:mm aa\",\n      placeholderText: \"Select Time\",\n      excludeTimes: this.state.excludedTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, this.props.errors['time'])));\n  }\n\n}\nexport default TimePicker;","map":{"version":3,"sources":["C:/Users/Å½iga/Desktop/Ineor/src/components/TimePicker.js"],"names":["React","Component","DatePicker","setMinutes","setHours","addMonths","moment","baseUrl","TimePicker","constructor","props","handleChange","val","e","setState","startDate","timeDisabled","time","excludedTimes","getDay","startHour","getWorkingHours","map","day","endHour","callbackGetDateValue","i","state","appointmentsDate","length","toLocaleDateString","selectedDate","getHours","getMinutes","serviceId","oldDateObj","Date","newDateObj","setTime","getTime","console","log","handleTime","value","callbackGetTimeValue","appointments","componentDidMount","fetch","then","getAppointments","json","unix","appointment","newValue","catch","err","alert","render","now","toDate","isWeekday","date","bind","datedisabled","errors","serviceDuration"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { setMinutes, setHours, addMonths } from 'date-fns';\r\nimport moment from 'moment'\r\nimport { baseUrl } from './BookAppointment';\r\nimport '../sass/bookappointment.scss';\r\n\r\n\r\nexport class TimePicker extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      startDate: null,\r\n      startHour: null,\r\n      endHour: null,\r\n      timeDisabled: this.props.timeDisabled,\r\n      time: null,\r\n      appointments: null,\r\n      excludedTimes: [],\r\n    }\r\n  }\r\n\r\n  handleChange = (val, e) => {\r\n    this.setState({\r\n      startDate: val,\r\n      timeDisabled: false,\r\n      time: null,\r\n      excludedTimes: [],\r\n    });\r\n\r\n    const getDay = val.getDay();\r\n\r\n    if (getDay === 1) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[0].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[0].endHour)\r\n      });\r\n    } else if (getDay === 2) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[1].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[1].endHour)\r\n      });\r\n    } else if (getDay === 3) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[2].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[2].endHour)\r\n      });\r\n    } else if (getDay === 4) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[3].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[3].endHour)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[4].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[4].endHour)\r\n      });\r\n    }\r\n    this.props.callbackGetDateValue(val)\r\n\r\n    var i;\r\n    for (i = 0; i < this.state.appointmentsDate.length; i++) {\r\n      if (`${val.toLocaleDateString()}` === this.state.appointmentsDate[i].toLocaleDateString()) {\r\n        const selectedDate = this.state.appointmentsDate[i];\r\n        const getHours = selectedDate.getHours();\r\n        const getMinutes = selectedDate.getMinutes();\r\n        if (this.props.serviceId === 3) {\r\n          var oldDateObj = setHours(setMinutes(new Date(), getMinutes), getHours);\r\n          var newDateObj = new Date();\r\n          newDateObj.setTime(oldDateObj.getTime() + (30 * 60 * 1000));\r\n          /* console.log(newDateObj); */\r\n          return this.setState({\r\n            excludedTimes: [newDateObj],\r\n          },  () => console.log(this.state.excludedTimes) )\r\n        } else {\r\n          console.log('50')\r\n          return this.setState({\r\n            excludedTimes: [setHours(setMinutes(new Date(), getMinutes), getHours)],\r\n          }, () => console.log(this.state.excludedTimes))\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleTime = (value) => {\r\n      this.setState({\r\n      time: value,\r\n    }, /* () => console.log(this.state.time) */);\r\n    this.props.callbackGetTimeValue(value)\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n     // GET APPOINTMENTS\r\n\r\n     fetch(baseUrl + '/appointments')\r\n     .then(getAppointments => {\r\n         return getAppointments.json();\r\n     })\r\n     .then(getAppointments => {\r\n        const unix = getAppointments.map(appointment => appointment.startDate)\r\n      \r\n        const newValue = unix.map(value => new Date(value * 1000));\r\n\r\n         this.setState({\r\n             appointmentsDate: newValue,\r\n         }, /* () => console.log(newValue) */)\r\n     })\r\n     .catch(err => {\r\n         alert(\"Failed to load our appointments\" + err)\r\n     });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { startDate, startHour, endHour} = this.state;\r\n    const now = moment().toDate();\r\n    const isWeekday = date => {\r\n      const day = date.getDay();\r\n      return day !== 0 && day !== 6;\r\n    };\r\n \r\n    return (\r\n      <div>\r\n        <div className=\"input-wrapper\">\r\n          <DatePicker\r\n              selected={startDate}\r\n              onChange={this.handleChange.bind(this)}\r\n              filterDate={isWeekday}\r\n              minDate={new Date()}\r\n              maxDate={addMonths(new Date(), 5)}\r\n              disabled={this.props.datedisabled}\r\n              placeholderText=\"Select Date\"\r\n              dateFormat=\"MMMM d, yyyy\"\r\n          />\r\n          <span className=\"error\">{this.props.errors['date']}</span>\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <DatePicker \r\n            selected={this.state.time}\r\n            onChange={this.handleTime.bind(this)}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            minTime={setHours(setMinutes(now, 0), startHour)}\r\n            maxTime={setHours(setMinutes(now, 30), endHour - 1)}\r\n            timeIntervals={this.props.serviceDuration}\r\n            disabled={this.state.timeDisabled}\r\n            timeCaption=\"Time\"\r\n            dateFormat=\"h:mm aa\"\r\n            placeholderText=\"Select Time\"\r\n            excludeTimes={this.state.excludedTimes}\r\n          />\r\n          <span className=\"error\">{this.props.errors['time']}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimePicker\r\n"]},"metadata":{},"sourceType":"module"}